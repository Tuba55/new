#create a variable with integer value
a_tuba = 100
print("The type of variable having value",a_tuba,"is",type(a_tuba))
#create a variable with float value
b_tuba = 10.3432
print("The type of variable having value",b_tuba,"is",type(b_tuba))
#create a variable with complex value
c_tuba = 100+6j
print("The type of variable having value",c_tuba,"is",type(c_tuba))

Output:


2. Python string DataType

Code:
a_tuba = "String in a double quote"
b_tuba = 'String in a single quote'
print(a_tuba)
print()
print(b_tuba)
print()
#using ',' to concatenate the two or several strings
print(a_tuba,"concatenated with", b_tuba)
print()
#using '+' to concate the two or several strings
print(a_tuba+ "concated with" +b_tuba)
print()

Output:

3. Python list Data Type

Code:
#list of having only integers
a_tuba = [1,2,3,4,5,6]
print(a_tuba)
print()
#list of having only strings
b_tuba = ["Tuba", "Anushree", "Nandini", "Deeku"]
print(b_tuba)
print()
#list of having both integers and strings
c_tuba = ["Hey", "you",1,2,3,"go"]
print(c_tuba)
print()
#index are 0 based this will print a single character
print(c_tuba[2])#this will print "1" in list c

Output:

4.Python Tuple

Code:
#tuple having only integers type of data
a_tuba = (1,2,3,4)
print(a_tuba) #print the whole tuple
print()
#tuple having multiple type of data
b_tuba = ("hello",123,"go")
print(b_tuba) #print the whole tuple
print()
#index of tuple are also 0 based
print(b_tuba[2]) # this print a single element in a tuple in the case "go"
print()

Output:

5.Python Dictionary

Code:
#a sample dictionary variable
a_tuba = {1: "first name", 2: "last name", "age": 33}
print(a_tuba)
print()
#printValue having key=1
print(a_tuba[1])
print()
#print value having key=2
print(a_tuba[2])
print()
#print value having key=age
print(a_tuba["age"])
print()

Output:

6.Python set

Code:
a_tuba = {5,6,3,4,1}
print(a_tuba)
print()
#printing set variable
print("a_tuba =",a_tuba)
print()
#data type of variable a
print("the data type of a_tuba is :" ,type (a_tuba))

Output:
 
